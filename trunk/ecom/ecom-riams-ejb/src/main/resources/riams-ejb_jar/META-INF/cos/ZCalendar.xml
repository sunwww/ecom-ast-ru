<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="20" zv="Cache for UNIX (Linux Intel/32-bit) 5.2 (Build 329)" ts="2007-12-25 00:44:52">
<Routine name="ZCalendar" type="MAC" languagemode="0" timestamp="60934,59108"><![CDATA[
errf q ""
	//Возвращает текущую дату в формате TypeFormat
curDate(TypeFormat)
	s $zt="errf"
	n res
	i $g(TypeFormat)="" s TypeFormat="cache"
	s res=$h
	i TypeFormat="cache"
	i (TypeFormat="ru")!(TypeFormat)="RU" s res=$zdate(res)
	q res
 
	//Проверить наличие записи в классе ClassName со значением Value в поле FieldName
	//ClassName	- имя класса
	//FieldName	- имя поля
	//Value		- значение поля
Check(ClassName,FieldName,Value)
	s $zt="errf"
	n res,rs,scstrSQL
	i $g(ClassName)="" w "ERROR:Нет имени класса",1/0
	i $g(FieldName)="" w "ERROR:Нет имени поля",1/0
	i $g(Value)="" w "ERROR:Нет значения",1/0
	s strSQL="SELECT "_FieldName_" FROM "_ClassName_" WHERE "_FieldName_"='"_Value_"'"
	s rs=##class(%ResultSet).%New("DynamicQuery:SQL")
	s sc=rs.Prepare(strSQL)
	s sc=rs.Execute()
	s res=0
	if rs.Next(.sc){
		s res=1
	}
	q res
	//Очисить времена и дату Date рабочего календаря даты IdWCD
	//IdWCD	- идентификатор рабочего календаря даты
	//Date	- дата
ClearDay(IdWCD,Date)
	n id,listIdWCT,objectWCT
	s listIdWCT=$$GetList("WorkCalendarTime","id","workCalendarDay_id",IdWCD,"#")
	f id=1:1:$l(listIdWCT,"#") {
		i ##class(User.WorkCalendarTime).%DeleteId($p(listIdWCT,"#",id))
	}
	i ##class(User.WorkCalendarDay).%DeleteId(IdWCD)
	q 1
	
	//Получить список значений поля FieldName класса ClassName
	// отобранные по значению ValueCondition поля FieldCondition
	// через разделитель Delimiter
	//ClassName			- имя класса
	//FieldName			- имя поля
	//FieldCondition	- поле условия
	//ValueCondition	- значение условия
	//Delimiter			- разделитель
GetList(ClassName,FieldName,FieldCondition,ValueCondition,Delimiter)
	s $zt="errf"
	n res,rs,sc,strSQL
	i $g(ClassName)="" w "ERROR:Нет имени класса",1/0
	i $g(FieldName)="" w "ERROR:Нет имени поля",1/0
	i $g(Delimiter)="" s Delimiter="#"
	s strSQL="SELECT "_FieldName_" FROM "_ClassName
	i ($g(FieldCondition)'="")!($g(ValueCondition)'="") s strSQL=strSQL_" WHERE "_FieldCondition_"='"_ValueCondition_"'"
	s res=""
	s rs= ##class(%ResultSet).%New("%DynamicQuery:SQL")
	s sc=rs.Prepare(strSQL)
	s sc=rs.Execute()
	while rs.Next(.sc){
		s res=res_rs.Data(FieldName)_Delimiter
	}
	s res=$e(res,1,$l(res)-1)
	q res
 
	//Получить список дат по рабочему календарю IdWC за даты с DateFrom по DateTo через разделитель Delimiter
	//IdWC		- идентификатор рабочего календаря
	//DateFrom	- дата С
	//DateTo	- дата По
	//Delimiter			- разделитель
GetListDateWC(IdWC,DateFrom,DateTo,Delimiter)	
	s $zt="errf"
	n res,rs,sc,strSQL
	s res=""
	s strSQL="SELECT * FROM WorkCalendarDay WHERE workCalendar_id='"_IdWC_
		"' AND calendarDate>"_(DateFrom-1)_
		" AND calendarDate<"_(DateTo+1)
	s rs=##class(%ResultSet).%New("%DynamicQuery:SQL")
	s sc=rs.Prepare(strSQL)
	s sc=rs.Execute()
	w IdWC
	while rs.Next(.sc) {
		s res=res_rs.Data("calendarDate")_Delimiter
	}
	s res=$e(res,1,$l(res)-1)
	q res
	
	//Сгенерировать расписание за период дат с DateStart по DateEnd по работнику IdWorker
	//если IdWorker=* то по всем работникам
	//DateFrom	- дата С
	//DateTo	- дата По
	//IdW 		- IdWorker			- работник
	//IdWF 		- IdWorkFunction	- рабочая функция
	//IdWC		- IdWorkCalendar	- рабочий календарь
GenerateDay(DateFrom,DateTo,IdW,IdWF,IdWC)
	s $zt="errf"
	n date,idW,idWF,idWC,listWCD,listW,listWF,listWC,res
	i $g(IdW)="" s IdW="*"
	i $g(IdWF)="" s IdWF="*"
	i $g(IdWC)="" s IdWC="*"
	i $g(DateFrom)'="" s DateFrom=$zdateh(DateFrom)	
	i $g(DateFrom)="" s DateFrom=$zdate($h)
	i $g(DateTo)'="" s DateTo=$zdateh(DateTo)
	i $g(DateTo)="" s DateTo=DateFrom
	if IdW="*" {
		s listW=$$GetList("Worker","id",,,"#")
	} else {
		i '$$Check("Worker","id",IdW) w "Неверно задан параметр IdW",1/0
		s listW=IdW
	}
	w "IdW:"_listW,!
	for idW=1:1:$l(listW,"#") {
		w !,"idW:"_idW_"["_$p(listW,"#",idW)_"]"
		if IdWF="*" {
			s listWF=$$GetList("WorkFunction","id","worker_id",$p(listW,"#",idW),"#")
		} else {
			i '$$Check("WorkFunction","id",IdWF) w "Неверно задан параметр IdW",1/0
			s listWF=IdWF
		}
		for idWF=1:1:$l(listWF,"#") {
			w !,"idWF:"_idWF_"["_$p(listWF,"#",idWF)_"]"
			if IdWC="*" {
				s listWC=$$GetList("WorkCalendar","id","workFunction_id",$p(listWF,"#",idWF),"#")
			} else {
				i '$$Check("WorkCalendar","id",IdWC) w "Неверно задан параметр IdW",1/0
				s listWC=IdWC
			}
			for idWC=1:1:$l(listWC,"#") {
				w !,"idWC:"_idWC_"["_$p(listWC,"#",idWC)_"]"
				s listWCD=$$GetListDateWC($p(listWC,"#",idWC),DateFrom,DateTo,"#")
				w !,"listWCD:"_listWCD
				for date=DateFrom:1:DateTo {
					i listWCD[date {
						i $$ClearDay($p(listWC,"#",idWC),date)
					} 
					i $$SetNewDate($p(listWC,"#",idWC),date)
				}
			}
		}
	}
	w "Process complete!"
 	q 1
 
	//Записать новую дату Date по календарю IdWC начиная с часа HourStart по HourEnd интервал в минутах Interval
	//IdWC		- идентификатор рабочего календаря
	//Date		- дата
	//HourStart	- с Час
	//HourEnd	- По Час
	//Interval	- Интервал в минутах
SetNewDate(IdWC,Date,HourStart,HourEnd,Interval)
	s $zt="errf"
	n chasendTime,interval,objectWC,idWCD,hour,minute,workCD,startTime,time
	i $g(HourStart)="" s HourStart=8
	i $g(HourEnd)="" s HourEnd=20
	i $g(Interval)="" s Interval=5
	s workCD=##class(User.WorkCalendarDay).%New()
	s workCD.calendarDate=Date
	s objectWC=##class(User.WorkCalendar).%OpenId(IdWC)
	s workCD.workCalendarid=objectWC
	w !,IdWC_":"_Date_"["_workCD.workCalendarid_"]"_objectWC
	i workCD.%Save() w !,"[SetNewDate-OK]"_Date
	e  w !,"[SetNewDate-FALSE]"
	s idWCD=workCD.%Id()
	w !,"SetNewTime:"
	for hour=HourStart:1:HourEnd {
		if hour'=HourEnd {
			for minute=0:Interval:59 {
				s time=$ztimeh(hour_":"_minute)
				i $$SetNewTime(idWCD,time)
			}
		} else {
			i $$SetNewTime(idWCD,time)
		}
	}
	q 1
	//Записать новое время по рабочему календарю за день 
	//IdWCD	- идентификатор рабочего календаря за день
	//Time	- время
SetNewTime(IdWCD,Time)
	s $zt="errf"
	n objectWCD,workCT
	s workCT=##class(User.WorkCalendarTime).%New()
	s workCT.timeFrom=Time
	s objectWCD=##class(User.WorkCalendarDay).%OpenId(IdWCD)
	s workCT.workCalendarDayid=objectWCD
	i workCT.%Save() w Time_","
	e  w !,"[SetNewTime-FALSE]"
	q 1
]]></Routine>
</Export>
